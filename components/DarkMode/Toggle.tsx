import { useState } from "react";

import styles from "./Toggle.module.scss";

export default function Toggle({ check, onClick }) {
  const [isEvening, setEvening] = useState(check);

  return (
    <div className={styles.toggleWrapper}>
      <input
        type="checkbox"
        className="dn"
        id="dn"
        checked={isEvening}
        onChange={() => setEvening(!isEvening)}
        onClick={(value) => onClick(value.target)}
      />
      <label htmlFor="dn" className={styles.toggle}>
        
        <svg width="40px" x="0px" y="0px" viewBox={`${isEvening ? "5" : "15"} 0 ${isEvening ? "95" : "75"} ${isEvening ? "85" : "100"}`}> <g fill={isEvening ? "white" : "black"} transform={`rotate(22 50 50) scale(${isEvening ? 0.9 : 1})`}><path d={`M 34.2 20.7 c 0.6 1.4 1.9 2.2 3.3 2.2 c 0.4 0 0.9 -0.1 1.3 -0.3 c 1.8 -0.7 2.7 -2.8 1.9 -4.6 l -3 -7.5 c -0.7 -1.8 -2.8 -2.7 -4.6 -1.9 c -1.8 0.7 -2.7 2.8 -1.9 4.6 L 34.2 20.7 z M 10.7 37.8 l 7.5 3.2 c 0.5 0.2 0.9 0.3 1.4 0.3 c 1.4 0 2.7 -0.8 3.2 -2.1 c 0.8 -1.8 -0.1 -3.8 -1.9 -4.6 l -7.5 -3.2 c -1.8 -0.8 -3.8 0.1 -4.6 1.9 C 8.1 35 8.9 37 10.7 37.8 z M 18.5 60.1 l -7.5 3 c -1.8 0.7 -2.7 2.8 -1.9 4.6 c 0.6 1.4 1.9 2.2 3.3 2.2 c 0.4 0 0.9 -0.1 1.3 -0.3 l 7.5 -3 c 1.8 -0.7 2.7 -2.8 1.9 -4.6 C 22.4 60.2 20.3 59.4 18.5 60.1 z M 39.5 78 c -1.8 -0.8 -3.8 0.1 -4.6 1.9 l -3.2 7.5 c -0.8 1.8 0.1 3.8 1.9 4.6 c 0.5 0.2 0.9 0.3 1.4 0.3 c 1.4 0 2.7 -0.8 3.2 -2.1 l 3.2 -7.5 C 42.1 80.8 41.3 78.8 39.5 78 z M 67 79.6 c -0.7 -1.8 -2.8 -2.7 -4.6 -1.9 c -1.8 0.7 -2.7 2.8 -1.9 4.6 l 3 7.5 c 0.6 1.4 1.9 2.2 3.3 2.2 c 0.4 0 0.9 -0.1 1.3 -0.3 c 1.8 -0.7 2.7 -2.8 1.9 -4.6 L 67 79.6 z M 90.5 62.5 l -7.5 -3.2 c -1.8 -0.8 -3.8 0.1 -4.6 1.9 c -0.8 1.8 0.1 3.8 1.9 4.6 l 7.5 3.2 c 0.5 0.2 0.9 0.3 1.4 0.3 c 1.4 0 2.7 -0.8 3.2 -2.1 C 93.1 65.4 92.2 63.3 90.5 62.5 z M 81.3 40.5 c 0.4 0 0.9 -0.1 1.3 -0.3 l 7.5 -3 c 1.8 -0.7 2.7 -2.8 1.9 -4.6 c -0.7 -1.8 -2.8 -2.7 -4.6 -1.9 l -7.5 3 c -1.8 0.7 -2.7 2.8 -1.9 4.6 C 78.7 39.7 80 40.5 81.3 40.5 z M 61.6 22.3 c 0.5 0.2 0.9 0.3 1.4 0.3 c 1.4 0 2.7 -0.8 3.2 -2.1 l 3.2 -7.5 c 0.8 -1.8 -0.1 -3.8 -1.9 -4.6 c -1.8 -0.8 -3.8 0.1 -4.6 1.9 l -3.2 7.5 C 59 19.5 59.9 21.6 61.6 22.3 z M 40.7 27.5 c -12.6 5.1 -18.8 19.5 -13.7 32.2 c 3.9 9.6 13.2 15.5 22.9 15.5 c 3.1 0 6.2 -0.6 9.2 -1.8 c 12.6 -5.1 18.8 -19.5 13.7 -32.2 C 67.8 28.6 53.3 22.4 40.7 27.5 z ${isEvening ? "M 56.6 66.8 c -9.1 3.6 -19.4 -0.7 -23 -9.8 c -3.6 -9.1 0.7 -19.4 9.8 -23 c 2.2 -0.9 4.4 -1.3 6.6 -1.3 c 7 0 13.7 4.2 16.4 11.1 C 70 52.9 65.6 63.2 56.6 66.8 z" : ""}`} /></g></svg>
      <svg height="40" width="17">
          <line x1="3" y1="32" x2="14" y2="8" style={{stroke: isEvening ? "white" : "black", strokeWidth: "2px", strokeLinecap: "round"}} />
      </svg>
        <svg width="40px" x="0px" y="0px" viewBox={`${isEvening ? "10" : "35"} 0 ${isEvening ? "80" : "65"} 95`} > <g fill={isEvening ? "white" : "black"} transform={`rotate(150 50 50) scale(${isEvening ? .95 : 0.85})`}><path d={`M 78.7 37.4 C 75.3 28.7 68.6 22 60.1 18.4 c -8.6 -3.6 -18 -3.7 -26.6 -0.2 c -1.4 0.6 -2.9 1.3 -4.5 2.2 c -1.1 0.6 -1.8 1.8 -1.7 3.1 c 0 1.3 0.7 2.4 1.8 3 c 9.4 5.2 15.2 15.1 15.2 25.8 c 0 9.5 -4.6 18.4 -12.4 24 c -1 0.7 -1.6 2 -1.4 3.2 c 0.1 1.3 0.9 2.3 2.1 2.8 c 4.5 2 9.3 3 14.1 3 c 4.4 0 8.8 -0.8 13 -2.5 c 8.6 -3.5 15.4 -10.1 19 -18.7 C 82.1 55.5 82.2 46 78.7 37.4 z ${!isEvening ? "M 56.9 76.2 c -5.2 2.1 -10.7 2.6 -16 1.4 c 6.6 -6.8 10.4 -15.9 10.4 -25.4 c 0 -11 -5 -21.4 -13.4 -28.2 c 6.4 -2.1 13.3 -1.8 19.6 0.8 c 6.8 2.9 12.1 8.3 14.9 15.2 C 78 54.2 71.1 70.5 56.9 76.2 z": ""}`} /></g></svg>
       </label>
    </div>
  );
}
